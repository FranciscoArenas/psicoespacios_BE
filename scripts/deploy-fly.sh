#!/bin/bash

# Script para desplegar en Fly.io
# Uso: ./scripts/deploy-fly.sh

set -e

echo "üöÄ Preparando despliegue en Fly.io..."

# Verificar si Flyctl est√° instalado
if ! command -v flyctl &> /dev/null; then
    echo "üî¥ Flyctl no est√° instalado. Instalando..."
    curl -L https://fly.io/install.sh | sh
    export PATH="$HOME/.fly/bin:$PATH"
fi

# Verificar si el usuario est√° autenticado
if ! flyctl auth whoami &> /dev/null; then
    echo "üîë Iniciando sesi√≥n en Fly.io..."
    flyctl auth login
fi

# Verificar si la aplicaci√≥n ya existe
if ! flyctl apps list | grep -q "psicoespacios-api"; then
    echo "üÜï Creando nueva aplicaci√≥n en Fly.io..."
    flyctl apps create psicoespacios-api
fi

# Verificar si necesitamos crear una base de datos PostgreSQL
if ! flyctl postgres list | grep -q "psicoespacios-db"; then
    echo "üîÑ Creando base de datos PostgreSQL..."
    flyctl postgres create --name psicoespacios-db --region scl || {
        echo "‚ö†Ô∏è Error al crear la base de datos. Puede que ya exista con otro nombre o haya problemas de permisos."
        echo "‚ö†Ô∏è Continuando con el despliegue de todas formas..."
    }
    
    # Conectar la base de datos a la aplicaci√≥n
    echo "üîÑ Conectando base de datos a la aplicaci√≥n..."
    flyctl postgres attach psicoespacios-db --app psicoespacios-api || {
        echo "‚ö†Ô∏è Error al conectar la base de datos a la aplicaci√≥n."
        echo "‚ö†Ô∏è Puede que necesite conectarla manualmente m√°s tarde."
        echo "‚ö†Ô∏è Continuando con el despliegue de todas formas..."
    }
fi

# Ejecutar script para corregir enums antes del despliegue con timeout
echo "üîß Verificando y corrigiendo enums en la base de datos..."

# Determinar qu√© comando de timeout usar (en macOS es gtimeout si se instal√≥ con brew)
TIMEOUT_CMD="timeout"
if command -v gtimeout &> /dev/null; then
    TIMEOUT_CMD="gtimeout"
elif ! command -v timeout &> /dev/null; then
    echo "‚ö†Ô∏è El comando 'timeout' no est√° disponible. Saltando la verificaci√≥n de enums..."
    echo "‚ö†Ô∏è Para instalar timeout en macOS: brew install coreutils"
    echo "‚ö†Ô∏è Continuando con el despliegue de todas formas..."
else
    $TIMEOUT_CMD 30 bash ./scripts/fix-enum.sh || {
      echo "‚ö†Ô∏è El script fix-enum.sh ha excedido el tiempo de espera o ha fallado. Continuando con el despliegue de todas formas..."
    }
fi

# Desplegar la aplicaci√≥n
echo "üöÄ Desplegando aplicaci√≥n..."
echo "‚ö†Ô∏è Si la migraci√≥n falla, ejecute ./scripts/fix-enum.sh para corregir los enums y luego vuelva a desplegar."

# Realizar el despliegue con un timeout largo para evitar bloqueos
if command -v timeout &> /dev/null || command -v gtimeout &> /dev/null; then
    TIMEOUT_CMD="timeout"
    if command -v gtimeout &> /dev/null; then
        TIMEOUT_CMD="gtimeout"
    fi
    
    echo "‚è±Ô∏è Aplicando timeout de 10 minutos al despliegue..."
    $TIMEOUT_CMD 600 flyctl deploy || {
        echo "‚ö†Ô∏è El despliegue ha excedido el tiempo l√≠mite o ha fallado."
        echo "‚ö†Ô∏è Puede intentar de nuevo m√°s tarde o verificar los logs con 'flyctl logs -a psicoespacios-api'."
        exit 1
    }
else
    # Sin timeout disponible
    flyctl deploy || {
        echo "‚ö†Ô∏è El despliegue ha fallado."
        echo "‚ö†Ô∏è Puede intentar de nuevo m√°s tarde o verificar los logs con 'flyctl logs -a psicoespacios-api'."
        exit 1
    }
fi

echo "‚úÖ Despliegue completado con √©xito!"
echo "üåê La aplicaci√≥n est√° disponible en: https://psicoespacios-api.fly.dev/"
echo "üìú Para ver los logs: fly logs -a psicoespacios-api"
